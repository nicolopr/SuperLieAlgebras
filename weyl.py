from roots import *
from scalar_products import scalarp_roots

def weyl(roota: Root,rootb: Root):
    '''
    Weyl reflection of root b generated by root a
    '''
    if roota.vect_array==rootb.vect_array:
        if roota.coeffs==rootb.coeffs:
            return mult_root(roota,-1)
        elif roota.length!=0:
            proj=mult_root(roota,-2*scalarp_roots(roota,rootb)/roota.length)
            return sum_root(rootb,proj)
        elif roota.length==0:
            if scalarp_roots(roota,rootb)==0:
                return rootb
            else:
                return sum_root(roota,rootb)
    else:
        raise ValueError

v_arr=Vector_array((2,1))
root=Root((1,-1,0),v_arr)
root2=Root((1,1,0),v_arr)
root3=Root((0,1,1),v_arr)